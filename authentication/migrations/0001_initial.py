# Generated by Django 3.2.7 on 2021-11-15 21:53

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(default=None, max_length=254, null=True, unique=True, verbose_name='邮箱地址')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户基础信息',
                'verbose_name_plural': '用户基础信息',
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default=None, editable=False, max_length=150, verbose_name='用户名')),
                ('nickname', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='昵称')),
                ('avatar', models.ImageField(blank=True, default='static/default_avatar.jpg', max_length=256, null=True, upload_to='userAvatar/%Y%m', verbose_name='头像')),
                ('sex', models.SmallIntegerField(choices=[(11, '男'), (12, '女')], default=11, verbose_name='性别')),
                ('age', models.SmallIntegerField(default=0, verbose_name='年龄')),
                ('is_valid', models.BooleanField(default=True, verbose_name='逻辑删除')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '用户详细信息',
                'verbose_name_plural': '用户详细信息',
                'db_table': 'auth_user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserCoinsRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default=None, editable=False, max_length=150, verbose_name='用户名')),
                ('coins_changed', models.IntegerField(default=0, verbose_name='鲨币变化数量')),
                ('coins_before', models.IntegerField(default=0, verbose_name='鲨币变化前数量')),
                ('coins_after', models.IntegerField(default=0, verbose_name='鲨币变化后数量')),
                ('reason', models.CharField(blank=True, default=None, max_length=256, null=True, verbose_name='备注信息')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coins_record', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '鲨币交易记录',
                'verbose_name_plural': '鲨币交易记录',
                'db_table': 'auth_user_coins_record',
            },
        ),
        migrations.CreateModel(
            name='UserAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default=None, editable=False, max_length=150, verbose_name='用户名')),
                ('coins', models.FloatField(default=0.0, verbose_name='账户鲨币')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('is_valid', models.BooleanField(default=True, verbose_name='逻辑删除')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='asset', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '用户资产',
                'verbose_name_plural': '用户资产',
                'db_table': 'auth_user_asset',
            },
        ),
        migrations.CreateModel(
            name='LoginRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default=None, editable=False, max_length=150, verbose_name='用户名')),
                ('ip', models.CharField(blank=True, max_length=50, null=True, verbose_name='IP地址')),
                ('source', models.CharField(blank=True, default='web', max_length=30, null=True, verbose_name='登录来源')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_record', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '登录历史',
                'verbose_name_plural': '登录历史',
                'db_table': 'auth_login_record',
            },
        ),
    ]
